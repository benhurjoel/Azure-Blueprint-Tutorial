{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "localPrefix": {
            "type": "string",
            "metadata": {
                "displayName": "Prefix for the resource names deployed in this template"
            }
        },
        "workloadVnetRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/24"
        },
        "bastionVnetSubnetRange": {
            "type": "string",
            "defaultValue": "10.1.0.0/26"
        },
        "workloadWebServerSubnetRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/29"
        },
        "virtualMachinesName": {
            "type": "string",
            "defaultValue": "web-server"
        },
        "adminUsername": {
            "type":"string"
        },
        "adminPassword":{
            "type": "securestring"
        },
        "storageAccountName": {
            "type":"string"
        }
    },
    "variables": {
        "vnetName": "[concat(parameters('localPrefix'),'-vnet')]",
        "workloadNSGName": "[concat(parameters('localPrefix'),'-workload-nsg')]",
        "workloadSubnetName": "[concat(parameters('localPrefix'),'-web-subnet')]",
        "bastionNSGName": "bastion-nsg",
        "bastionName": "[concat(parameters('localPrefix'),'-bastion')]",
        "bastionPublicIPName": "[concat(parameters('localPrefix'),'-bastion-pip')]",
        "bastionSubnetName": "AzureBastionSubnet",
        "bastionSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),variables('bastionSubnetName'))]",
        "workloadSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),variables('workloadSubnetName'))]",
        "workloadNICName": "[concat(parameters('localPrefix'),'-',parameters('virtualMachinesName'),'-nic')]",
        "virtualMachinesName":"[concat(parameters('localPrefix'),'-',parameters('virtualMachinesName'))]",
        "storageAccountName": "[concat(parameters('localPrefix'),parameters('storageAccountName'))]"

    },
    "resources": [
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('workloadNSGName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('bastionNSGName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('workloadVnetRange')]",
                        "[parameters('bastionVnetSubnetRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('workloadSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadWebServerSubnetRange')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('workloadNSGName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionVnetSubnetRange')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('bastionNSGName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('workloadNSGName')]",
            "location": "southeastasia",
            "properties": {
                "securityRules": [
                    {
                        "name": "DenyInternetInbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyInternetOutbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "Internet",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('bastionNSGName')]",
            "location": "southeastasia",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowInternetInbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowControlInbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRanges": [
                                "443",
                                "4443"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyInternetOutbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Deny",
                            "priority": 150,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowVnetOutbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-02-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('bastionPublicIPName')]",
            "location": "southeastasia",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-11-01",
            "name": "[variables('bastionName')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses',variables('bastionPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('bastionPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[variables('bastionSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[variables('workloadNICName')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('workloadSubnetRef')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('virtualMachinesName')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('workloadNICName'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachinesName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [
                    ],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('workloadNICName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
                {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "southeastasia",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/bootdiagnostics-',variables('virtualMachinesName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}